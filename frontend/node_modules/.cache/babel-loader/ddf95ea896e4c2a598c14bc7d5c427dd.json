{"ast":null,"code":"var _jsxFileName = \"/media/as4c/New Volume/assignment/Fasal/frontend/src/components/Movies/MovieCard.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport \"./MovieCard.css\";\nimport { useDispatch } from \"react-redux\";\nimport { addToFavouriteFailure, addToFavouriteSuccess } from \"../../store/favouriteSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MovieCard = _ref => {\n  _s();\n\n  let {\n    movies,\n    favouriteMovie: FavouriteMovie,\n    f,\n    setF\n  } = _ref;\n  const dispatch = useDispatch();\n\n  const prepareData = apiResponse => {\n    return {\n      id: apiResponse.imdbID,\n      poster: apiResponse.Poster,\n      type: apiResponse.Type,\n      title: apiResponse.Title,\n      year: apiResponse.Year\n    };\n  };\n\n  const addFavoriteMovie = async movie => {\n    try {\n      const movieData = prepareData(movie);\n      const token = localStorage.getItem(\"token\");\n      const response = await axios.post(`${process.env.REACT_APP_BACKEND_BASE_URL}/favourites/`, movieData, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      console.log(response);\n      dispatch(addToFavouriteSuccess(response.data.movie));\n      setF(f + 1);\n    } catch (error) {\n      console.error('Error:', error);\n      dispatch(addToFavouriteFailure(error.message));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movie-row-container\",\n    children: movies === null || movies === void 0 ? void 0 : movies.map(movie => movie.Poster.match(/\\.(jpeg|jpg|gif|png)$/) != null && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-frame\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"movie-image\",\n        src: movie.Poster,\n        alt: \"movie\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"movie-header\",\n        children: movie.Type\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overlay-container\",\n        onClick: () => addFavoriteMovie(movie),\n        children: /*#__PURE__*/_jsxDEV(FavouriteMovie, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: movie.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 15\n      }, this)]\n    }, movie.imdbID, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MovieCard, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c = MovieCard;\nexport default MovieCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieCard\");","map":{"version":3,"names":["axios","useDispatch","addToFavouriteFailure","addToFavouriteSuccess","MovieCard","movies","favouriteMovie","FavouriteMovie","f","setF","dispatch","prepareData","apiResponse","id","imdbID","poster","Poster","type","Type","title","Title","year","Year","addFavoriteMovie","movie","movieData","token","localStorage","getItem","response","post","process","env","REACT_APP_BACKEND_BASE_URL","headers","console","log","data","error","message","map","match"],"sources":["/media/as4c/New Volume/assignment/Fasal/frontend/src/components/Movies/MovieCard.js"],"sourcesContent":["import axios from \"axios\";\nimport \"./MovieCard.css\";\nimport { useDispatch } from \"react-redux\";\nimport { addToFavouriteFailure, addToFavouriteSuccess } from \"../../store/favouriteSlice\";\n\nconst MovieCard = ({\n  movies,\n  favouriteMovie: FavouriteMovie,\n  f, \n  setF\n}) => {\n  const dispatch = useDispatch();\n  const prepareData = (apiResponse) => {\n      return {\n          id: apiResponse.imdbID,\n          poster: apiResponse.Poster,\n          type: apiResponse.Type,\n          title: apiResponse.Title,\n          year : apiResponse.Year\n      };\n      \n  }\n\n\n  const addFavoriteMovie = async(movie) => {\n    \n      try {\n          const movieData = prepareData(movie);\n          const token = localStorage.getItem(\"token\");\n          \n          const response = await axios.post(`${process.env.REACT_APP_BACKEND_BASE_URL}/favourites/`, movieData, {\n              headers: {\n                  'Content-Type': 'application/json',\n                  'Authorization': `Bearer ${token}`\n              }\n          });\n          console.log(response);\n          dispatch(addToFavouriteSuccess(response.data.movie));\n          setF(f+1)\n      } catch (error) {\n          console.error('Error:', error);\n          dispatch(addToFavouriteFailure(error.message));\n      } \n  };\n\n  return (\n    <div className=\"movie-row-container\">\n      {movies?.map(\n        (movie) =>\n          movie.Poster.match(/\\.(jpeg|jpg|gif|png)$/) != null && (\n            <div className=\"movie-frame\" key={movie.imdbID}>\n              <img className=\"movie-image\" src={movie.Poster} alt=\"movie\" />\n              <p className=\"movie-header\">{movie.Type}</p>\n              <div\n                className=\"overlay-container\"\n                onClick={() => addFavoriteMovie(movie)}\n                >\n                <FavouriteMovie />\n              </div>\n              <h1>{movie.title}</h1>\n            </div>\n          )\n      )}\n    </div>\n  );\n};\n\nexport default MovieCard;\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,iBAAP;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,qBAAT,EAAgCC,qBAAhC,QAA6D,4BAA7D;;;AAEA,MAAMC,SAAS,GAAG,QAKZ;EAAA;;EAAA,IALa;IACjBC,MADiB;IAEjBC,cAAc,EAAEC,cAFC;IAGjBC,CAHiB;IAIjBC;EAJiB,CAKb;EACJ,MAAMC,QAAQ,GAAGT,WAAW,EAA5B;;EACA,MAAMU,WAAW,GAAIC,WAAD,IAAiB;IACjC,OAAO;MACHC,EAAE,EAAED,WAAW,CAACE,MADb;MAEHC,MAAM,EAAEH,WAAW,CAACI,MAFjB;MAGHC,IAAI,EAAEL,WAAW,CAACM,IAHf;MAIHC,KAAK,EAAEP,WAAW,CAACQ,KAJhB;MAKHC,IAAI,EAAGT,WAAW,CAACU;IALhB,CAAP;EAQH,CATD;;EAYA,MAAMC,gBAAgB,GAAG,MAAMC,KAAN,IAAgB;IAErC,IAAI;MACA,MAAMC,SAAS,GAAGd,WAAW,CAACa,KAAD,CAA7B;MACA,MAAME,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;MAEA,MAAMC,QAAQ,GAAG,MAAM7B,KAAK,CAAC8B,IAAN,CAAY,GAAEC,OAAO,CAACC,GAAR,CAAYC,0BAA2B,cAArD,EAAoER,SAApE,EAA+E;QAClGS,OAAO,EAAE;UACL,gBAAgB,kBADX;UAEL,iBAAkB,UAASR,KAAM;QAF5B;MADyF,CAA/E,CAAvB;MAMAS,OAAO,CAACC,GAAR,CAAYP,QAAZ;MACAnB,QAAQ,CAACP,qBAAqB,CAAC0B,QAAQ,CAACQ,IAAT,CAAcb,KAAf,CAAtB,CAAR;MACAf,IAAI,CAACD,CAAC,GAAC,CAAH,CAAJ;IACH,CAbD,CAaE,OAAO8B,KAAP,EAAc;MACZH,OAAO,CAACG,KAAR,CAAc,QAAd,EAAwBA,KAAxB;MACA5B,QAAQ,CAACR,qBAAqB,CAACoC,KAAK,CAACC,OAAP,CAAtB,CAAR;IACH;EACJ,CAnBD;;EAqBA,oBACE;IAAK,SAAS,EAAC,qBAAf;IAAA,UACGlC,MADH,aACGA,MADH,uBACGA,MAAM,CAAEmC,GAAR,CACEhB,KAAD,IACEA,KAAK,CAACR,MAAN,CAAayB,KAAb,CAAmB,uBAAnB,KAA+C,IAA/C,iBACE;MAAK,SAAS,EAAC,aAAf;MAAA,wBACE;QAAK,SAAS,EAAC,aAAf;QAA6B,GAAG,EAAEjB,KAAK,CAACR,MAAxC;QAAgD,GAAG,EAAC;MAApD;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAG,SAAS,EAAC,cAAb;QAAA,UAA6BQ,KAAK,CAACN;MAAnC;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE;QACE,SAAS,EAAC,mBADZ;QAEE,OAAO,EAAE,MAAMK,gBAAgB,CAACC,KAAD,CAFjC;QAAA,uBAIE,QAAC,cAAD;UAAA;UAAA;UAAA;QAAA;MAJF;QAAA;QAAA;QAAA;MAAA,QAHF,eASE;QAAA,UAAKA,KAAK,CAACL;MAAX;QAAA;QAAA;QAAA;MAAA,QATF;IAAA,GAAkCK,KAAK,CAACV,MAAxC;MAAA;MAAA;MAAA;IAAA,QAHL;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAoBD,CA5DD;;GAAMV,S;UAMaH,W;;;KANbG,S;AA8DN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}